import telebot
from telebot import types

bot = telebot.TeleBot('6140603915:AAF7bA6-pQPxCoSFZGa9yXCU6NNrATRFywo')
TO_CHAT_ID = '@Youtubebirza'


def start_markup():
    markup = types.InlineKeyboardMarkup(row_width=1)
    item1 = types.InlineKeyboardButton(text='–ë–∏—Ä–∂–∞', url='https://t.me/Youtubebirza')
    item2 = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å‚úÖ', callback_data='check1')
    markup.add(item1, item2)
    return markup


@bot.message_handler(commands=["start"])
def start(message):
    status = ['creator', 'administrator', 'member']
    for i in status:
        if i == bot.get_chat_member(chat_id='-1001177710151',
                                    user_id=message.chat.id).status:
            markup = types.InlineKeyboardMarkup(row_width=1)
            item = types.InlineKeyboardButton('–í—ã–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç', callback_data='post1')
            item1 = types.InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞', url='https://t.me/youtube_meneger')
            item2 = types.InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞', url='https://telegra.ph/Pravila-02-24-32')

            markup.add(item, item1, item2)

            bot.send_message(message.chat.id,
                             f'üö®–í–°–ï –û–ë–™–Ø–í–õ–ï–ù–ò–Ø –ë–ï–°–ü–õ–ê–¢–ù–´–ïüö®\n\n'
                             f''
                             f'üëá–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µüëá',
                             parse_mode='html', reply_markup=markup)

            break
    else:
        bot.send_message(message.chat.id, '–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –±–∏—Ä–∂—É!', reply_markup=start_markup())




def check(call):
    status = ['creator', 'administrator', 'member']
    for i in status:
        if i == bot.get_chat_member(chat_id='-1001177710151', user_id=call.message.chat.id).status:
            markup = types.InlineKeyboardMarkup(row_width=1)
            item = types.InlineKeyboardButton('–í—ã–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç', callback_data='post1')
            item1 = types.InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞', url='https://t.me/youtube_meneger')
            item2 = types.InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞', url='https://telegra.ph/Pravila-02-24-32')

            markup.add(item, item1, item2)

            bot.send_message(call.message.chat.id,
                             f'üö®–í–°–ï –û–ë–™–Ø–í–õ–ï–ù–ò–Ø –ë–ï–°–ü–õ–ê–¢–ù–´–ïüö®\n\n'
                             f''
                             f'üëá–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µüëá',
                             parse_mode='html', reply_markup=markup)
            break

    else:
        bot.send_message(call.message.chat.id, '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –±–∏—Ä–∂—É!', reply_markup=start_markup())


@bot.callback_query_handler(func=lambda call: True)
def callback(call):
    if call.message:
        if call.data == 'check1':
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
            check(call)

        if call.data == 'post1':
            status = ['creator', 'administrator', 'member']
            for i in status:
                if i == bot.get_chat_member(chat_id='-1001177710151', user_id=call.message.chat.id).status:
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item = types.InlineKeyboardButton('–í—ã–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç', callback_data='post1')
                    item1 = types.InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞', url='https://t.me/youtube_meneger')
                    item2 = types.InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞',
                                                       url='https://telegra.ph/Pravila-02-24-32')

                    markup.add(item, item1, item2)

                    mesg = bot.send_message(call.message.chat.id, '–ß—Ç–æ–±—ã –≤—ã–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç, –ø—Ä–∏—à–ª–∏ –º–Ω–µ –µ–≥–æ')

                    @bot.message_handler(commands=["start"])
                    def start(message):
                        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à—É –±–∏—Ä–∂—É!',
                                         reply_markup=start_markup())
                        return True

                    bot.register_next_step_handler(mesg, post)

                    break

            else:
                bot.send_message(call.message.chat.id, '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!', reply_markup=start_markup())

        if call.data == 'yes':
            status = ['creator', 'administrator', 'member']
            for i in status:
                if i == bot.get_chat_member(chat_id='-1001177710151', user_id=call.message.chat.id).status:
                    bot.forward_message(TO_CHAT_ID, call.message.chat.id, call.message.message_id - 1)

                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item = types.InlineKeyboardButton('–í—ã–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç', callback_data='post1')
                    item1 = types.InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞', url='https://t.me/youtube_meneger')
                    item2 = types.InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞', url='https://telegra.ph/Pravila-02-24-32')

                    markup.add(item, item1, item2)

                    bot.send_message(call.message.chat.id, '–ü–æ—Å—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–ª–æ–∂–µ–Ω‚úÖ', reply_markup=markup)

                    break

                else:
                    bot.send_message(call.message.chat.id, '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!', reply_markup=start_markup())

        if call.data == 'no':
            status = ['creator', 'administrator', 'member']
            for i in status:
                if i == bot.get_chat_member(chat_id='-1001177710151',
                                            user_id=call.message.chat.id).status:
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item = types.InlineKeyboardButton('–í—ã–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç', callback_data='post1')
                    item1 = types.InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞', url='https://t.me/youtube_meneger')
                    item2 = types.InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞', url='https://telegra.ph/Pravila-02-24-32')

                    markup.add(item, item1, item2)

                    bot.send_message(call.message.chat.id,
                                     f'üö®–í–°–ï –û–ë–™–Ø–í–õ–ï–ù–ò–Ø –ë–ï–°–ü–õ–ê–¢–ù–´–ïüö®\n\n'
                                     f''
                                     f'üëá–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µüëá',
                                     parse_mode='html', reply_markup=markup)

                    break
            else:
                bot.send_message(call.message.chat.id, '–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à—É –±–∏—Ä–∂—É!',
                                 reply_markup=start_markup())



def lrlr(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    item = types.InlineKeyboardButton('–í—ã–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç', callback_data='post1')
    item1 = types.InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞', url='https://t.me/youtube_meneger')
    item2 = types.InlineKeyboardButton('–ü—Ä–∞–≤–∏–ª–∞', url='https://telegra.ph/Pravila-02-24-32')

    markup.add(item, item1, item2)

    bot.send_message(message.chat.id, '–ü–æ—Å—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –≤—ã–ª–æ–∂–µ–Ω‚úÖ', reply_markup=markup)


def post(message):
    status = ['creator', 'administrator', 'member']
    for i in status:
        if i == bot.get_chat_member(chat_id='-1001177710151',
                                    user_id=message.chat.id).status:
            if message.text == '/start':
                start(message)

            else:
                markup = types.InlineKeyboardMarkup(row_width=1)
                item = types.InlineKeyboardButton('–î–∞', callback_data='yes')
                item1 = types.InlineKeyboardButton('–ù–µ—Ç', callback_data='no')

                markup.add(item, item1)
                bot.send_message(message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç?', reply_markup=markup)

            break
    else:
        bot.send_message(message.chat.id, '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!',
                         reply_markup=start_markup())

bot.polling(none_stop=True)
